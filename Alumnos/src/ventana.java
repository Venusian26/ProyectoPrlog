

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.function.Function;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


public class ventana extends javax.swing.JFrame {


    public ventana() {
        initComponents();
        setLocationRelativeTo(null);
        setSize(800,500);
 
        try {
            llenarTabla(conexionBD.obtener());
        } catch (SQLException ex) {
            Logger.getLogger(ventana.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

   
    
    public JTextField getTxtNombre() {
        return txtNombre;
    }

    public void setTxtNombre(JTextField txtNombre) {
        this.txtNombre = txtNombre;
    }

    public JTextField getTxtNumeroControl() {
        return txtNumeroControl;
    }

    public void setTxtNumeroControl(JTextField txtNumeroControl) {
        this.txtNumeroControl = txtNumeroControl;
    }

    public JTextArea getTxtDatosFiltrados() {
        return txtDatosFiltrados;
    }

    public void setTxtDatosFiltrados(JTextArea txtDatosFiltrados) {
        this.txtDatosFiltrados = txtDatosFiltrados;
    }

    public JTextField getTxtGeneracion() {
        return txtGeneracion;
    }

    public void setTxtGeneracion(JTextField txtGeneracion) {
        this.txtGeneracion = txtGeneracion;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtNumeroControl = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDatos = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDatosFiltrados = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtGeneracion = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnReset = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Registrar Alumnos");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, -1, -1));
        getContentPane().add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 90, -1));
        getContentPane().add(txtNumeroControl, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, 90, -1));

        jLabel2.setText("Numero Control");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 80, -1));

        jLabel3.setText("Nombre");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, -1));

        btnGuardar.setText("Registrar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        getContentPane().add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, -1, -1));

        jButton1.setText("Filtrar por generaciòn");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 200, -1, -1));

        tblDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Numero Control"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDatos);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 70, 320, 90));

        txtDatosFiltrados.setColumns(20);
        txtDatosFiltrados.setRows(5);
        jScrollPane2.setViewportView(txtDatosFiltrados);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 250, -1, -1));

        jLabel4.setText("Datos filtrados");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 230, -1, -1));

        jLabel5.setText("Generaciòn:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 210, -1, -1));

        txtGeneracion.setText("14");
        getContentPane().add(txtGeneracion, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 210, 50, -1));

        jLabel6.setText("Alumnos registrados en la base de datos");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, -1, -1));

        btnReset.setText("Resetear Datos");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        getContentPane().add(btnReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 160, -1, -1));

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        getContentPane().add(btnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(419, 160, 100, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents
 
    //Este metodo es para llenar la tabla de datos
    public void llenarTabla(Connection conexion)throws SQLException{
     
     DefaultTableModel modelo = (DefaultTableModel) tblDatos.getModel();
     Object [] fila=new Object[2];
     
     try{
     PreparedStatement consulta = conexion.prepareStatement("SELECT Nombre, Numero_Control FROM " + tabla );
      ResultSet resultado = consulta.executeQuery();
      
       while(resultado.next()){
           fila[1]=resultado.getString("Numero_Control");
           fila[0]=resultado.getString("Nombre");
           modelo.addRow(fila);
       }
      tblDatos.setModel(modelo);
     }catch(SQLException ex){
         
     }
     
 }
    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
   
        try {
            //despues de registrar alumnos llenara la tabla nuevamente
            
           
            guardarAlumnos(conexionBD.obtener());
            llenarTabla(conexionBD.obtener());
         
        } catch (SQLException ex) {
            Logger.getLogger(ventana.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      try {
            obtenerDatos(conexionBD.obtener());
        } catch (SQLException ex) {
            Logger.getLogger(ventana.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        try {
            resetearTabla(conexionBD.obtener());
            
        } catch (SQLException ex) {
            Logger.getLogger(ventana.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed

        try {
            llenarTabla(conexionBD.obtener());
        } catch (SQLException ex) {
            Logger.getLogger(ventana.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ventana.class.getName()).log(Level.SEVERE, null, ex);
        }        
        
        
    }//GEN-LAST:event_btnActualizarActionPerformed

   
    /**
     * @param args the command line arguments
     */
    
    //METODOPARA GUARDAR ALUMNOS EN LA BASE DE DATOS
      String tabla = "alumnos";
 
    public void guardarAlumnos(Connection conexion)throws SQLException{
            String nombre=txtNombre.getText();
            int numeroControl=Integer.parseInt(txtNumeroControl.getText());
            
            try{
           PreparedStatement insert;
               //---------
               insert = conexion.prepareStatement("INSERT INTO "+ tabla + "(Nombre,Numero_Control) VALUES(?,?)");
              
               insert.setString(1, nombre);
               insert.setInt(2, numeroControl);
           
             
                insert.execute();
               showMessageDialog(this,"Datos guardados");
              
            }catch(SQLException ex){
                 showMessageDialog(this,"ERROR:"+ex);
                 
            }
    }
    //Guardar
    
    public void obtenerDatos(Connection conexion)throws SQLException{
        
        ArrayList<String> numeroControl = new ArrayList<String>();
         List<Integer> even = null;
        try{
        PreparedStatement consulta = conexion.prepareStatement("SELECT nombre, Numero_Control FROM " + tabla );
        ResultSet resultado = consulta.executeQuery();
         while(resultado.next()){
             
            numeroControl.add(resultado.getString("Numero_Control")); 
            
            

             even = numeroControl.stream() .map(s -> Integer.valueOf(s)) .filter(number -> number % 2 == 0) .collect(Collectors.toList());
            
            }
           
            //recorrer el ArrayList por cada alemento
            Iterator<String> it = numeroControl.iterator();
        String numControl="";
        while (it.hasNext()){
            numControl += it.next()+"\n";
          
            txtDatosFiltrados.setText(numControl);
             
        }
           //showMessageDialog(this,"Datos:"+numeroControl +"\n"+"PARES:"+even);
           
      }catch(SQLException ex){
          showMessageDialog(this,"ERROR:"+ex);
      }
  
    }
    
     //metodo para resetear la tabla
    public void resetearTabla(Connection conexion)throws SQLException{
        try{
        PreparedStatement query = conexion.prepareStatement("TRUNCATE alumnos" );
        query.execute();

        
        showMessageDialog(this,"Datos reseteados");
        conexion.close();
        }catch(SQLException ex){
            showMessageDialog(this,"ERROR:"+ex);
        }
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblDatos;
    private javax.swing.JTextArea txtDatosFiltrados;
    private javax.swing.JTextField txtGeneracion;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNumeroControl;
    // End of variables declaration//GEN-END:variables
}
